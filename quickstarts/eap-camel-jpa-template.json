{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "annotations": {
      "description": "JBoss Fuse on EAP Camel JPA quickstart. This example demonstrates how to connect a Camel application with JBoss Fuse on EAP to a MySQL database and expose a REST API. This example creates two containers, one container to run as a MySQL server, and another running the Camel application which acts as as a client to the database.",
      "tags": "quickstart,javaee,java,jboss-fuse,fis",
      "iconClass": "icon-jboss",
      "version": "2.0",
      "openshift.io/display-name": "JBoss Fuse 7.0 on EAP - Camel JPA + MySQL (Ephemeral)"
    },
    "name": "s2i-eap-camel-jpa"
  },
  "labels": {
    "template": "s2i-eap-camel-jpa"
  },
  "parameters": [
    {
      "displayName": "Application Name",
      "description": "The name for the application.",
      "name": "APPLICATION_NAME",
      "value": "s2i-eap-camel-jpa",
      "required": true
    },
    {
      "displayName": "Custom http Route Hostname.",
      "description": "Custom hostname for http service route.  Leave blank for default hostname, e.g.: <application-name>-<project>.<default-domain-suffix>",
      "name": "HOSTNAME_HTTP",
      "value": "",
      "required": false
    },
    {
      "displayName": "Git Repository URL",
      "description": "Git source URI for application.",
      "name": "SOURCE_REPOSITORY_URL",
      "value": "https://github.com/wildfly-extras/wildfly-camel-examples",
      "required": true
    },
    {
      "displayName": "Git Reference",
      "description": "Git branch/tag reference",
      "name": "SOURCE_REPOSITORY_REF",
      "value": "wildfly-camel-examples-4.8.0.fuse-000003",
      "required": false
    },
    {
      "displayName": "Context Directory",
      "description": "Path within Git project to build; empty for root project directory.",
      "name": "CONTEXT_DIR",
      "value": "",
      "required": false
    },
    {
      "displayName": "Builder version",
      "description": "The version of the FIS S2I builder image to use.",
      "name": "BUILDER_VERSION",
      "value": "1.0"
    },
    {
      "displayName": "Database JNDI Name",
      "description": "Database JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/OrdersDS",
      "name": "DB_JNDI",
      "value": "java:jboss/datasources/OrdersDS",
      "required": false
    },
    {
      "displayName": "Database Name",
      "description": "Database name",
      "name": "DB_DATABASE",
      "value": "orders_db",
      "required": true
    },
    {
      "displayName": "Database Username",
      "description": "Database user name",
      "name": "DB_USERNAME",
      "from": "user[a-zA-Z0-9]{3}",
      "generate": "expression",
      "required": true
    },
    {
      "displayName": "Database Password",
      "description": "Database user password",
      "name": "DB_PASSWORD",
      "from": "[a-zA-Z0-9]{8}",
      "generate": "expression",
      "required": true
    },
    {
      "displayName": "Datasource Minimum Pool Size",
      "description": "Sets xa-pool/min-pool-size for the configured datasource.",
      "name": "DB_MIN_POOL_SIZE",
      "required": false
    },
    {
      "displayName": "Datasource Maximum Pool Size",
      "description": "Sets xa-pool/max-pool-size for the configured datasource.",
      "name": "DB_MAX_POOL_SIZE",
      "required": false
    },
    {
      "displayName": "Datasource Transaction Isolation",
      "description": "Sets transaction-isolation for the configured datasource.",
      "name": "DB_TX_ISOLATION",
      "required": false
    },
    {
      "displayName": "MySQL Lower Case Table Names",
      "description": "Sets how the table names are stored and compared.",
      "name": "MYSQL_LOWER_CASE_TABLE_NAMES",
      "required": false
    },
    {
      "displayName": "MySQL Maximum number of connections",
      "description": "The maximum permitted number of simultaneous client connections.",
      "name": "MYSQL_MAX_CONNECTIONS",
      "required": false
    },
    {
      "displayName": "MySQL FullText Minimum Word Length",
      "description": "The minimum length of the word to be included in a FULLTEXT index.",
      "name": "MYSQL_FT_MIN_WORD_LEN",
      "required": false
    },
    {
      "displayName": "MySQL FullText Maximum Word Length",
      "description": "The maximum length of the word to be included in a FULLTEXT index.",
      "name": "MYSQL_FT_MAX_WORD_LEN",
      "required": false
    },
    {
      "displayName": "MySQL AIO",
      "description": "Controls the innodb_use_native_aio setting value if the native AIO is broken.",
      "name": "MYSQL_AIO",
      "required": false
    },
    {
      "displayName": "MySQL Image Stream Tag",
      "description": "The tag to use for the \"mysql\" image stream.  Typically, this aligns with the major.minor version of MySQL.",
      "name": "MYSQL_IMAGE_STREAM_TAG",
      "value": "5.7",
      "required": true
    },
    {
      "displayName": "Queues",
      "description": "Queue names.",
      "name": "MQ_QUEUES",
      "value": "",
      "required": false
    },
    {
      "displayName": "Topics",
      "description": "Topic names.",
      "name": "MQ_TOPICS",
      "value": "",
      "required": false
    },
    {
      "displayName": "A-MQ cluster password",
      "description": "A-MQ cluster admin password.",
      "name": "MQ_CLUSTER_PASSWORD",
      "from": "[a-zA-Z0-9]{8}",
      "generate": "expression",
      "required": true
    },
    {
      "displayName": "Github Webhook Secret",
      "description": "GitHub trigger secret.",
      "name": "GITHUB_WEBHOOK_SECRET",
      "from": "[a-zA-Z0-9]{8}",
      "generate": "expression",
      "required": true
    },
    {
      "displayName": "Generic Webhook Secret",
      "description": "Generic build trigger secret.",
      "name": "GENERIC_WEBHOOK_SECRET",
      "from": "[a-zA-Z0-9]{8}",
      "generate": "expression",
      "required": true
    },
    {
      "displayName": "ImageStream Namespace",
      "description": "Namespace in which the Fuse ImageStreams are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
      "name": "IMAGE_STREAM_NAMESPACE",
      "value": "openshift",
      "required": true
    },
    {
      "displayName": "JGroups Cluster Password",
      "description": "JGroups cluster password.",
      "name": "JGROUPS_CLUSTER_PASSWORD",
      "from": "[a-zA-Z0-9]{8}",
      "generate": "expression",
      "required": true
    },
    {
      "displayName": "Deploy Exploded Archives",
      "description": "Controls whether exploded deployment content should be automatically deployed.",
      "name": "AUTO_DEPLOY_EXPLODED",
      "value": "false",
      "required": false
    },
    {
      "displayName": "Maven Arguments To Append",
      "description": "Additional arguments passed to mvn, e.g. for multi-module builds.",
      "name": "MAVEN_ARGS_APPEND",
      "value": "-pl camel-jpa -am",
      "required": false
    },
    {
      "displayName": "Maven mirror URL",
      "description": "Maven mirror to use for S2I builds.",
      "name": "MAVEN_MIRROR_URL",
      "value": "",
      "required": false
    },
    {
      "displayName": "Artifact Directories",
      "description": "List of directories from which archives will be copied into the deployment folder. If unspecified, all archives in /target will be copied.",
      "name": "ARTIFACT_DIR",
      "value": "camel-jpa/target",
      "required": false
    }
  ],
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "spec": {
        "ports": [
          {
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "deploymentConfig": "${APPLICATION_NAME}"
        }
      },
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "application": "${APPLICATION_NAME}"
        },
        "annotations": {
          "description": "The web server's http port."
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "spec": {
          "ports": [
            {
              "port": 3306,
              "targetPort": 3306
            }
          ],
          "selector": {
            "deploymentConfig": "${APPLICATION_NAME}-mysql"
          }
      },
      "metadata": {
        "name": "${APPLICATION_NAME}-mysql",
        "labels": {
          "application": "${APPLICATION_NAME}"
          },
          "annotations": {
            "description": "The database server's port."
          }
        }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "id": "${APPLICATION_NAME}-http",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "application": "${APPLICATION_NAME}"
        },
        "annotations": {
          "description": "Route for application's http service."
        }
      },
      "spec": {
        "host": "${HOSTNAME_HTTP}",
        "to": {
          "name": "${APPLICATION_NAME}"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "application": "${APPLICATION_NAME}"
        }
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "application": "${APPLICATION_NAME}"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "${CONTEXT_DIR}"
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "env": [
              {
                "name": "MAVEN_ARGS_APPEND",
                "value": "${MAVEN_ARGS_APPEND}"
              },
              {
                "name": "MAVEN_MIRROR_URL",
                "value": "${MAVEN_MIRROR_URL}"
              },
              {
                "name": "ARTIFACT_DIR",
                "value": "${ARTIFACT_DIR}"
              },
              {
                "name": "DB_JNDI",
                "value": "${DB_JNDI}"
              }
            ],
            "forcePull": true,
            "from": {
              "kind": "ImageStreamTag",
              "namespace": "${IMAGE_STREAM_NAMESPACE}",
              "name": "fis-eap-openshift:${BUILDER_VERSION}"
            }
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${APPLICATION_NAME}:latest"
          }
        },
        "triggers": [
          {
            "type": "GitHub",
            "github": {
              "secret": "${GITHUB_WEBHOOK_SECRET}"
            }
          },
          {
            "type": "Generic",
            "generic": {
              "secret": "${GENERIC_WEBHOOK_SECRET}"
            }
          },
          {
            "type": "ImageChange",
            "imageChange": {}
          },
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "application": "${APPLICATION_NAME}"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${APPLICATION_NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${APPLICATION_NAME}:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "deploymentConfig": "${APPLICATION_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${APPLICATION_NAME}",
            "labels": {
              "deploymentConfig": "${APPLICATION_NAME}",
              "application": "${APPLICATION_NAME}"
            }
          },
          "spec": {
            "terminationGracePeriodSeconds": 75,
            "containers": [
              {
                "name": "${APPLICATION_NAME}",
                "image": "${APPLICATION_NAME}",
                "imagePullPolicy": "Always",
                "lifecycle": {
                  "preStop": {
                    "exec": {
                      "command": [
                        "/opt/eap/bin/jboss-cli.sh",
                        "-c",
                        ":shutdown(timeout=60)"
                      ]
                    }
                  }
                },
                "livenessProbe": {
                  "exec": {
                    "command": [
                      "/bin/bash",
                      "-c",
                      "/opt/eap/bin/livenessProbe.sh"
                    ]
                  }
                },
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "/bin/bash",
                      "-c",
                      "/opt/eap/bin/readinessProbe.sh"
                    ]
                  }
                },
                "ports": [
                  {
                    "name": "jolokia",
                    "containerPort": 8778,
                    "protocol": "TCP"
                  },
                  {
                    "name": "http",
                    "containerPort": 8080,
                    "protocol": "TCP"
                  },
                  {
                    "name": "ping",
                    "containerPort": 8888,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "OPENSHIFT_KUBE_PING_LABELS",
                    "value": "application=${APPLICATION_NAME}"
                  },
                  {
                    "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "DB_SERVICE_PREFIX_MAPPING",
                    "value": "${APPLICATION_NAME}-mysql=DB"
                  },
                  {
                    "name": "DB_JNDI",
                    "value": "${DB_JNDI}"
                  },
                  {
                    "name": "DB_DATABASE",
                    "value": "${DB_DATABASE}"
                  },
                  {
                    "name": "DB_USERNAME",
                    "value": "${DB_USERNAME}"
                  },
                  {
                    "name": "DB_PASSWORD",
                    "value": "${DB_PASSWORD}"
                  },
                  {
                    "name": "DB_MIN_POOL_SIZE",
                    "value": "${DB_MIN_POOL_SIZE}"
                  },
                  {
                    "name": "DB_MAX_POOL_SIZE",
                    "value": "${DB_MAX_POOL_SIZE}"
                  },
                  {
                    "name": "DB_TX_ISOLATION",
                    "value": "${DB_TX_ISOLATION}"
                  },
                  {
                    "name": "TX_DATABASE_PREFIX_MAPPING",
                    "value": "${APPLICATION_NAME}-mysql=DB"
                  },
                  {
                    "name": "MQ_CLUSTER_PASSWORD",
                    "value": "${MQ_CLUSTER_PASSWORD}"
                  },
                  {
                    "name": "MQ_QUEUES",
                    "value": "${MQ_QUEUES}"
                  },
                  {
                    "name": "MQ_TOPICS",
                    "value": "${MQ_TOPICS}"
                  },
                  {
                    "name": "JGROUPS_CLUSTER_PASSWORD",
                    "value": "${JGROUPS_CLUSTER_PASSWORD}"
                  },
                  {
                    "name": "AUTO_DEPLOY_EXPLODED",
                    "value": "${AUTO_DEPLOY_EXPLODED}"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
      "name": "${APPLICATION_NAME}-mysql",
        "labels": {
          "application": "${APPLICATION_NAME}"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${APPLICATION_NAME}-mysql"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${IMAGE_STREAM_NAMESPACE}",
                "name": "mysql:${MYSQL_IMAGE_STREAM_TAG}"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "deploymentConfig": "${APPLICATION_NAME}-mysql"
        },
        "template": {
          "metadata": {
            "name": "${APPLICATION_NAME}-mysql",
            "labels": {
              "deploymentConfig": "${APPLICATION_NAME}-mysql",
              "application": "${APPLICATION_NAME}"
            }
          },
          "spec": {
            "terminationGracePeriodSeconds": 60,
            "containers": [
              {
                "name": "${APPLICATION_NAME}-mysql",
                "image": "mysql",
                "imagePullPolicy": "Always",
                "ports": [
                  {
                    "containerPort": 3306,
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 5,
                  "exec": {
                    "command": [ "/bin/sh", "-i", "-c",
                      "MYSQL_PWD=\"$MYSQL_PASSWORD\" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'"]
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 30,
                  "tcpSocket": {
                    "port": 3306
                  }
                },
                "env": [
                  {
                    "name": "MYSQL_USER",
                    "value": "${DB_USERNAME}"
                  },
                  {
                    "name": "MYSQL_PASSWORD",
                    "value": "${DB_PASSWORD}"
                  },
                  {
                    "name": "MYSQL_DATABASE",
                    "value": "${DB_DATABASE}"
                  },
                  {
                    "name": "MYSQL_LOWER_CASE_TABLE_NAMES",
                    "value": "${MYSQL_LOWER_CASE_TABLE_NAMES}"
                  },
                  {
                    "name": "MYSQL_MAX_CONNECTIONS",
                    "value": "${MYSQL_MAX_CONNECTIONS}"
                  },
                  {
                    "name": "MYSQL_FT_MIN_WORD_LEN",
                    "value": "${MYSQL_FT_MIN_WORD_LEN}"
                  },
                  {
                    "name": "MYSQL_FT_MAX_WORD_LEN",
                    "value": "${MYSQL_FT_MAX_WORD_LEN}"
                  },
                  {
                    "name": "MYSQL_AIO",
                    "value": "${MYSQL_AIO}"
                  }
                ]
              }
            ]
          }
        }
      }
    }
  ]
}
